{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/admin/Desktop/meet-up/components/context/index.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nconst context = /*#__PURE__*/React.createContext({\n  myMeetups: []\n});\nexport const contextProvider = props => {\n  const {\n    0: myMeetups,\n    1: setMyMeetups\n  } = useState([]);\n\n  const init = function () {\n    const storage = localStorage.getItem(\"bookmarks\");\n    if (storage) console.log(JSON.parse(storage));\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(context.Provider, {\n    value: {\n      myMeetups: myMeetups\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\nexport default ontext;","map":{"version":3,"sources":["/Users/admin/Desktop/meet-up/components/context/index.js"],"names":["React","useState","useEffect","useCallback","context","createContext","myMeetups","contextProvider","props","setMyMeetups","init","storage","localStorage","getItem","console","log","JSON","parse","children","ontext"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AAEA,MAAMC,OAAO,gBAAGJ,KAAK,CAACK,aAAN,CAAoB;AAClCC,EAAAA,SAAS,EAAE;AADuB,CAApB,CAAhB;AAIA,OAAO,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACxC,QAAM;AAAA,OAACF,SAAD;AAAA,OAAYG;AAAZ,MAA4BR,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMS,IAAI,GAAG,YAAY;AACvB,UAAMC,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAhB;AACA,QAAIF,OAAJ,EAAaG,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,KAAL,CAAWN,OAAX,CAAZ;AACd,GAHD;;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,IAAI;AACL,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,OAAD,CAAS,QAAT;AACE,IAAA,KAAK,EAAE;AACLJ,MAAAA,SAAS,EAAEA;AADN,KADT;AAAA,cAKGE,KAAK,CAACU;AALT;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CApBM;AAsBP,eAAeC,MAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\n\nconst context = React.createContext({\n  myMeetups: [],\n});\n\nexport const contextProvider = (props) => {\n  const [myMeetups, setMyMeetups] = useState([]);\n\n  const init = function () {\n    const storage = localStorage.getItem(\"bookmarks\");\n    if (storage) console.log(JSON.parse(storage));\n  };\n  useEffect(() => {\n    init();\n  }, []);\n\n  return (\n    <context.Provider\n      value={{\n        myMeetups: myMeetups,\n      }}\n    >\n      {props.children}\n    </context.Provider>\n  );\n};\n\nexport default ontext;\n"]},"metadata":{},"sourceType":"module"}